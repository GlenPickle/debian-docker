Description: Remove events code reliance on the non-unique RemoteAddr.
 https://github.com/dotcloud/docker/pull/5348
 https://github.com/shykes/docker/pull/82
 https://github.com/dotcloud/docker/commit/a953dd98fb1f6365045403df826d95349c32e83f
Author: Tianon Gravi <admwiggin@gmail.com>, Victor Vieux <victor.vieux@docker.com>
Forwarded: not-needed

diff --git a/api/server/server.go b/api/server/server.go
index 3c93a34..a3de239 100644
--- a/api/server/server.go
+++ b/api/server/server.go
@@ -244,7 +244,7 @@ func getEvents(eng *engine.Engine, version version.Version, w http.ResponseWrite
 		return err
 	}
 
-	var job = eng.Job("events", r.RemoteAddr)
+	var job = eng.Job("events")
 	streamJSON(job, w, true)
 	job.Setenv("since", r.Form.Get("since"))
 	job.Setenv("until", r.Form.Get("until"))
diff --git a/server/server.go b/server/server.go
index 3763f87..793b953 100644
--- a/server/server.go
+++ b/server/server.go
@@ -196,12 +196,8 @@ func (srv *Server) ContainerKill(job *engine.Job) engine.Status {
 }
 
 func (srv *Server) Events(job *engine.Job) engine.Status {
-	if len(job.Args) != 1 {
-		return job.Errorf("Usage: %s FROM", job.Name)
-	}
-
 	var (
-		from    = job.Args[0]
+		from    = time.Now().UTC().UnixNano()
 		since   = job.GetenvInt64("since")
 		until   = job.GetenvInt64("until")
 		timeout = time.NewTimer(time.Unix(until, 0).Sub(time.Now()))
@@ -2470,7 +2466,7 @@ func NewServer(eng *engine.Engine, config *daemonconfig.Config) (*Server, error)
 		pullingPool: make(map[string]chan struct{}),
 		pushingPool: make(map[string]chan struct{}),
 		events:      make([]utils.JSONMessage, 0, 64), //only keeps the 64 last events
-		listeners:   make(map[string]chan utils.JSONMessage),
+		listeners:   make(map[int64]chan utils.JSONMessage),
 		running:     true,
 	}
 	daemon.SetServer(srv)
@@ -2532,7 +2528,7 @@ type Server struct {
 	pullingPool map[string]chan struct{}
 	pushingPool map[string]chan struct{}
 	events      []utils.JSONMessage
-	listeners   map[string]chan utils.JSONMessage
+	listeners   map[int64]chan utils.JSONMessage
 	Eng         *engine.Engine
 	running     bool
 }
